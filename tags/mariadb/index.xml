<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>MariaDB on 钟柱的博客</title>
    <link>https://zhongzhu.github.io/tags/mariadb/</link>
    <description>Recent content in MariaDB on 钟柱的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Mon, 27 Apr 2020 21:05:53 +0800</lastBuildDate>
    
	<atom:link href="https://zhongzhu.github.io/tags/mariadb/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>How to Work With JSON in MariaDB</title>
      <link>https://zhongzhu.github.io/post/how-to-work-with-json-in-mariadb/</link>
      <pubDate>Mon, 27 Apr 2020 21:05:53 +0800</pubDate>
      
      <guid>https://zhongzhu.github.io/post/how-to-work-with-json-in-mariadb/</guid>
      <description>In my last post When SQL Meets NoSQl, we talked about MariaDB can combine both SQL and NoSQL in the same database engine. Today, let&amp;rsquo;s find out how. We&amp;rsquo;re going to use Docker image to start a MariaDB container, then try out CRUD (Create/ Read/ Update/ Delete) on JSON documents stored in the same relational database table. Start MariaDB in a Docker container % docker run --name mariadb -e MYSQL_ROOT_PASSWORD=example</description>
    </item>
    
    <item>
      <title>When SQL Meets NoSQL</title>
      <link>https://zhongzhu.github.io/post/when-sql-meets-nosql/</link>
      <pubDate>Wed, 22 Apr 2020 20:51:58 +0800</pubDate>
      
      <guid>https://zhongzhu.github.io/post/when-sql-meets-nosql/</guid>
      <description>When you&amp;rsquo;ve got a project running for a long time, you&amp;rsquo;re likely running MariaDB as your database engine. Reasons are simple: You cannot use MySQL due to its GPL license and MariaDB is the true free version of MySQL. Sooner or later you&amp;rsquo;ll probably think of something called &amp;ldquo;NoSQL&amp;rdquo;. It&amp;rsquo;s a useful technology and it&amp;rsquo;s often used in the design lately. For example, your e-commerce website needs to store many</description>
    </item>
    
  </channel>
</rss>